{"version":3,"sources":["components/LoginRegister/Login/Login.js"],"names":["connect","state","loading","auth","isLoading","isAuthenticated","error","login","clearErrors","Radium","props","styles","lightgreenColor","color","col","padding","borderRadius","header","backgroundColor","button","fontWeight","border","card","boxShadow","cbody","FormControl","useState","email","password","input","setInput","errorM","setError","useEffect","id","msg","message","console","log","handleChangeInput","e","val","target","value","name","prev","from","to","sm","style","className","Header","Body","background","onSubmit","preventDefault","User","Group","controlId","Label","Control","onChange","type","placeholder","variant","Footer","height","width","timeout","textAlign"],"mappings":"ySAiKeA,uBANO,SAAAC,GAAK,MAAG,CAC1BC,QAAQD,EAAME,KAAKC,UACnBD,KAAKF,EAAME,KAAKE,gBAChBC,MAAML,EAAMK,SAGuB,CAACC,UAAMC,iBAA/BR,CAA6CS,aAlJhD,SAACC,GAET,IAAMC,EAAO,CACTC,gBAAgB,CACZC,MAAM,WAEVC,IAAI,CACAC,QAAQ,OACRC,aAAa,QAGjBC,OAAO,CACHC,gBAAgB,UAChBL,MAAM,WAGVM,OAAO,CACHN,MAAM,UACNO,WAAW,OACXF,gBAAgB,UAChBG,OAAO,qBAEXC,KAAK,CACDC,UAAW,oBAEfC,MAAM,CACFN,gBAAgB,UAChBL,MAAM,WAGVY,YAAY,CACRP,gBAAgB,QAChBL,MAAM,YAhCG,EAuCMa,mBAAS,CAC5BC,MAAM,GACNC,SAAS,KAzCI,mBAuCVC,EAvCU,KAuCJC,EAvCI,OA4COJ,mBAAS,MA5ChB,mBA4CVK,EA5CU,KA4CHC,EA5CG,KA8CZ1B,EAAOI,EAAPJ,MAEL2B,qBAAU,WAIH3B,GACe,eAAXA,EAAM4B,KACLF,EAAS1B,EAAM6B,IAAIC,SACnBC,QAAQC,IAAIhC,EAAM6B,IAAIC,YAIhC,CAAC9B,IAGH,IAAMiC,EAAkB,SAACC,GACrB,IAAIC,EAAID,EAAEE,OAAOC,MACbC,EAAKJ,EAAEE,OAAOE,KAClBd,GAAS,SAAAe,GAAI,kCACNA,GADM,kBAERD,EAAMH,QAkBf,OAAG/B,EAAMP,KAIE,kBAAC,IAAD,CAAU2C,KAAK,SAASC,GAAG,MAOtC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAI,GAAIC,MAAOtC,EAAOG,KAC3B,kBAAC,IAAD,CAAMmC,MAAOtC,EAAOW,KAAM4B,UAAU,eACpC,kBAAC,IAAKC,OAAN,CAAaF,MAAOtC,EAAOM,QAA3B,SACA,kBAAC,IAAKmC,KAAN,CAAWH,MAAOtC,EAAOa,OACxBO,GAAU,kBAAC,IAAD,CAAOkB,MAAO,CAACI,WAAW,WAAYxC,MAAM,UAAUkB,GAEjE,kBAAC,IAAD,CAAMuB,SAjCK,SAACd,GAChBA,EAAEe,iBAEF,IAAMC,EAAO,CACT7B,MAAME,EAAMF,MACZC,SAASC,EAAMD,UAGjBlB,EAAMH,MAAMiD,GACZ9C,EAAMF,gBAyBA,kBAAC,IAAKiD,MAAN,CAAYC,UAAU,kBAClB,kBAAC,IAAKC,MAAN,sBACA,kBAAC,IAAKC,QAAN,CAAcX,MAAOtC,EAAOc,YAAamB,KAAK,QAAQiB,SAAUtB,EAAmBI,MAAOd,EAAMF,MAAOmC,KAAK,QAAQC,YAAY,iBAGpI,kBAAC,IAAKN,MAAN,CAAYC,UAAU,qBAClB,kBAAC,IAAKC,MAAN,iBACA,kBAAC,IAAKC,QAAN,CAAcX,MAAOtC,EAAOc,YAAaqC,KAAK,WAAWlB,KAAK,WAAWiB,SAAUtB,EAAmBI,MAAOd,EAAMD,SAAUmC,YAAY,cAG7I,kBAAC,IAAD,CAAQD,KAAK,SAASE,QAAQ,UAAUf,MAAOtC,EAAOQ,QAAtD,YAIZ,kBAAC,IAAK8C,OAAN,CAAahB,MAAOtC,EAAOM,OAAQiC,UAAU,cAA7C,0BAAkF,kBAAC,IAAD,CAAMH,GAAG,UAAUE,MAAOtC,EAAOC,iBAAjC,aAG1E,kBAAC,IAAD,KACCF,EAAMR,SAAY,kBAAC,IAAD,CACf4D,KAAK,UACLjD,MAAM,UACNqD,OAAQ,IACRC,MAAO,IACPC,QAAS,IACTnB,MAAO,CAACoB,UAAU","file":"static/js/11.b67efe2e.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport Radium from 'radium';\n\n\nimport {Card,Button,Container,Row,Col,Form,Alert} from \"react-bootstrap\"\n\nimport {Link, Redirect} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\n\nimport Loader from 'react-loader-spinner'\n\n\nimport {login} from \"../../../actions/authAction\"\nimport {clearErrors} from \"../../../actions/errorAction\"\n\nconst Login=(props)=>{\n\n    const styles={\n        lightgreenColor:{\n            color:\"#29ff00\"\n        },\n        col:{\n            padding:\"50px\",\n            borderRadius:\"50px\",\n            \n        },\n        header:{\n            backgroundColor:\"#0c0c0C\",\n            color:\"#29ff00\",\n            \n        },\n        button:{\n            color:\"#29ff00\",\n            fontWeight:\"bold\",\n            backgroundColor:\"#0c0c0C\",\n            border:\"2px solid #0c0c0C\"\n        },\n        card:{\n            boxShadow: ' 3px 3px #7bff56'\n        },\n        cbody:{\n            backgroundColor:\"#333333\",\n            color:\"#29ff00\",\n\n        },\n        FormControl:{\n            backgroundColor:\"#3333\",\n            color:\"#29ff00\"\n        }\n\n    }\n   \n\n\n    const [input,setInput]=useState({\n        email:'',\n        password:''\n    })\n\n    const [errorM,setError]=useState(null);\n\n    let {error}=props;\n\n    useEffect(()=>{\n        // let {error}=props;\n        // console.log(error);\n\n        if(error){\n            if(error.id===\"LOGIN_FAIL\"){\n                setError(error.msg.message);\n                console.log(error.msg.message);\n\n            }\n        }\n    },[error])\n\n\n    const handleChangeInput=(e)=>{\n        let val=e.target.value;\n        let name=e.target.name;\n        setInput(prev=>({\n            ...prev,\n            [name]:val\n        }));\n    }\n\n    const loginHandler=(e)=>{\n        e.preventDefault();\n\n        const User = {\n            email:input.email,\n            password:input.password\n          };\n\n          props.login(User);\n          props.clearErrors();\n         \n\n    }\n\n    if(props.auth){\n        // console.log(\"login......\");\n        // props.clearErrors();\n        // console.log(error);\n        return <Redirect from=\"/login\" to=\"/\"></Redirect>\n    }\n\n\n  \n\n    return(\n    <Container >\n        <Row>\n            <Col sm={12} style={styles.col}>\n            <Card style={styles.card} className=\"text-center\">\n            <Card.Header style={styles.header}>Login</Card.Header>\n            <Card.Body style={styles.cbody}>\n            {errorM && <Alert style={{background:\"#0c0c0C\"}} color=\"danger\">{errorM}</Alert>}\n\n            <Form onSubmit={loginHandler}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control style={styles.FormControl} name=\"email\" onChange={handleChangeInput} value={input.email} type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control style={styles.FormControl} type=\"password\" name=\"password\" onChange={handleChangeInput} value={input.password} placeholder=\"Password\" />\n                </Form.Group>\n          \n                <Button type=\"submit\" variant=\"primary\" style={styles.button} >Submit</Button>\n\n                </Form>\n        </Card.Body>\n    <Card.Footer style={styles.header} className=\"text-muted\" >don't have an account? <Link to=\"/signup\" style={styles.lightgreenColor}>SignUp</Link></Card.Footer>\n        </Card>\n            </Col>\n            <Col>\n            {props.loading &&  <Loader\n                type=\"Circles\"\n                color=\"#29ff00\"\n                height={100}\n                width={100}\n                timeout={2000} //3 secs\n                style={{textAlign:\"center\"}} \n             /> }\n            </Col>\n        </Row>\n    </Container>\n        \n    )\n}\n\n\n\nconst mapStateToProps=state=>({\n    loading:state.auth.isLoading,\n    auth:state.auth.isAuthenticated,\n    error:state.error\n})\n\nexport default connect(mapStateToProps,{login,clearErrors})(Radium(Login));"],"sourceRoot":""}