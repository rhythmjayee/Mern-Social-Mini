{"version":3,"sources":["components/LoginRegister/Register/Register.js"],"names":["connect","state","loading","auth","isLoading","isAuthenticated","error","register","clearErrors","Radium","props","styles","lightgreenColor","color","col","padding","borderRadius","header","backgroundColor","button","fontWeight","border","card","boxShadow","cbody","FormControl","useState","name","email","password","input","setInput","errorM","setError","useEffect","id","msg","message","console","log","handleChangeInput","e","val","target","value","prev","from","to","sm","style","className","Header","Body","background","onSubmit","preventDefault","newUser","Group","controlId","Label","Control","type","onChange","placeholder","variant","Footer","height","width","timeout","textAlign"],"mappings":"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","file":"static/js/12.5a3478c8.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Radium from 'radium';\nimport {connect} from \"react-redux\";\n\n\nimport {Card,Button,Container,Row,Col,Form,Alert} from \"react-bootstrap\"\n\nimport {Link,Redirect} from \"react-router-dom\"\n\nimport Loader from 'react-loader-spinner'\n\nimport {register} from \"../../../actions/authAction\"\nimport {clearErrors} from \"../../../actions/errorAction\"\n\nconst Register=(props)=>{\n\n    const styles={\n        lightgreenColor:{\n            color:\"#29ff00\"\n        },\n        col:{\n            padding:\"50px\",\n            borderRadius:\"50px\",\n        },\n        header:{\n            backgroundColor:\"#0c0c0C\",\n            color:\"#29ff00\",\n            \n        },\n        button:{\n            color:\"#29ff00\",\n            fontWeight:\"bold\",\n            backgroundColor:\"#0c0c0C\",\n            border:\"2px solid #0c0c0C\"\n        },\n        card:{\n            boxShadow: ' 3px 3px #7bff56'\n        },\n        cbody:{\n            backgroundColor:\"#333333\",\n            color:\"#29ff00\",\n\n        },\n        FormControl:{\n            backgroundColor:\"#3333\",\n            color:\"#29ff00\"\n        }\n\n    }\n\n    const [input,setInput]=useState({\n        name:'',\n        email:'',\n        password:''\n    });\n\n    const [errorM,setError]=useState(null);\n\n\n    let {error}=props;\n    useEffect(()=>{\n        // let {error}=props;\n        // console.log(error);\n\n        if(error){\n            if(error.id===\"REGISTER_FAIL\"){\n                setError(error.msg.message);\n                console.log(error.msg.message);\n\n            }\n        }\n    },[error])\n\n    const handleChangeInput=(e)=>{\n        let val=e.target.value;\n        let name=e.target.name;\n        setInput(prev=>({\n            ...prev,\n            [name]:val\n        }));\n\n    }\n\n    const registerHandler=(e)=>{\n        props.clearErrors();\n        e.preventDefault();\n\n\n        const newUser = {\n            name:input.name,\n            email:input.email,\n            password:input.password\n          };\n          props.register(newUser);\n          props.clearErrors();\n\n    }\n\n    if(props.auth){\n        // console.log(\"register......\");\n        // console.log(error);\n        return <Redirect from=\"/signup\" to=\"/\"></Redirect>\n    }\n\n    return(\n    <Container >\n        <Row>\n            <Col sm={12} style={styles.col}>\n            <Card style={styles.card} className=\"text-center\">\n            <Card.Header style={styles.header}>SignUp</Card.Header>\n            <Card.Body style={styles.cbody}>\n            {errorM && <Alert style={{background:\"#0c0c0C\"}} color=\"danger\">{errorM}</Alert>}\n            <Form onSubmit={registerHandler}>\n            <Form.Group controlId=\"formBasicname\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control style={styles.FormControl} type=\"text\" name=\"name\" onChange={handleChangeInput} placeholder=\"Enter name...\" />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicemail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control style={styles.FormControl} type=\"email\" name=\"email\" onChange={handleChangeInput} placeholder=\"Enter email...\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control style={styles.FormControl} type=\"password\" name=\"password\" onChange={handleChangeInput} placeholder=\"Password\" />\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\" style={styles.button} >Submit</Button>\n\n                </Form>\n        </Card.Body>\n    <Card.Footer style={styles.header} className=\"text-muted\" >already have an account? <Link to=\"/login\" style={styles.lightgreenColor}>Login</Link></Card.Footer>\n        </Card>\n            </Col>\n            <Col>\n            {props.loading &&  <Loader\n                type=\"Circles\"\n                color=\"#29ff00\"\n                height={100}\n                width={100}\n                timeout={2000} //3 secs\n                style={{textAlign:\"center\"}} \n             /> }\n            </Col>\n        </Row>\n    </Container>\n        \n    )\n}\n\nconst mapStateToProps=state=>({\n    loading:state.auth.isLoading,\n    auth:state.auth.isAuthenticated,\n    error:state.error\n})\n\n\nexport default connect(mapStateToProps,{register,clearErrors})(Radium(Register));"],"sourceRoot":""}